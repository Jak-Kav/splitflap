name: PlatformIO CI B&R

on:
  push:
  pull_request:

jobs:
  pio-build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Check for Release Tag
      id: release_tag
      run: |
        git fetch --tags
        git_log=$(git log -1 --pretty=%B)
        echo "Commit message: $git_log"
        if [[ "$git_log" == *RELEASE* && "$git_log" == *V* ]]; then
          echo "Release commit found"
          tag_message="$git_log"
          release_version="${tag_message#*V* }"
          echo "Release version: $release_version"
          echo "release=true" >> $GITHUB_ENV
          echo "release_version=$release_version" >> $GITHUB_ENV
        else
          echo "No release commit found"
          echo "release=false" >> $GITHUB_ENV
        fi
      env:
        GITHUB_EVENT_PATH: ${{ github.event_path }}

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

    - name: Set up Python
      uses: actions/setup-python@v2

    - name: Install PlatformIO
      id: pio_install
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio

    - name: Build Firmware (esp32)
      # Run regardless of other build step failures, as long as setup steps completed
      if: always() && steps.pio_install.outcome == 'success'
      run: |
        pio run -d ./arduino/splitflap \
          -e esp32 \

    - name: Build Firmware (chainlink)
      # Run regardless of other build step failures, as long as setup steps completed
      if: always() && steps.pio_install.outcome == 'success'
      run: |
        pio run -d ./arduino/splitflap \
          -e chainlink

    - name: Build Firmware (chainlinkBase)
      # Run regardless of other build step failures, as long as setup steps completed
      if: always() && steps.pio_install.outcome == 'success'
      run: |
        pio run -d ./arduino/splitflap \
          -e chainlinkBase

    - name: Determine Release
      id: release
      run: |
        if [[ "${{ env.release }}" == "true" ]]; then
          echo "This is a release tag. Creating a GitHub release..."
          gh release create v${{ env.release_version }} ./arduino/splitflap/build/your-binary-file.bin -t "Release v${{ env.release_version }}"
          gh release upload v${{ env.release_version }} ./arduino/splitflap/build/your-binary-file.bin
        else
          echo "This is not a release tag. Skipping release creation."
        fi
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
